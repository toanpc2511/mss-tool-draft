stages:
  - build
  - build_docker
  - deploy

build_master:
  only:
    - master
  stage: build
  image: node:16
  before_script:
    - node -v
    - npm -v
  script:
    - yarn
    - yarn build-prod
  cache:
    key: node_modules_sun_oil_admin_fe
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 day
    paths:
      - dist/

build_docker_master:
  only:
    - master
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --cache=true
      --destination "${CI_REGISTRY_IMAGE}:${CURRENT_ROOT_VERSION}.${CI_PIPELINE_IID}"
      --destination "${CI_REGISTRY_IMAGE}:latest"

deploy_master:
  only:
    - master
  stage: deploy
  environment:
    name: master
    url: https://sun-oil-admin.web.app
  image: andreysenov/firebase-tools:9.13.1-node12
  script:
    - echo "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID"
    - firebase deploy --only hosting:production -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --token $FIREBASE_TOKEN

build_develop:
  only:
    - develop
  stage: build
  image: node:16
  before_script:
    - node -v
    - npm -v
  script:
    - yarn
    - yarn build-staging
  cache:
    key: node_modules_sun_oil_admin_fe
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 day
    paths:
      - dist/

deploy_develop:
  only:
    - develop
  stage: deploy
  environment:
    name: develop
    url: https://sun-oil-admin-staging.web.app
  image: andreysenov/firebase-tools:9.13.1-node12
  script:
    - echo "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID"
    - firebase deploy --only hosting:staging -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --token $FIREBASE_TOKEN
